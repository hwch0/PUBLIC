<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kr.pub.dao.AdminDAO">

<select id="getChartData" resultType="map">
SELECT
    TO_CHAR(p.payment_date, 'yyyy-mm') AS payment_month,
    SUM(CASE WHEN p.payment_type_code = 'PT001' THEN o.total_price ELSE 0 END) AS PT001,
    SUM(CASE WHEN p.payment_type_code = 'PT002' THEN o.total_price ELSE 0 END) AS PT002,
    SUM(CASE
        WHEN p.payment_type_code = 'PT001' THEN o.total_price
        WHEN p.payment_type_code = 'PT002' THEN o.total_price
        ELSE 0
    END) AS total_sales
FROM
    payment p
JOIN (
    SELECT
        order_id,
        SUM(total_price) AS total_price
    FROM (
        SELECT
            item_id,
            order_id,
            (quantity * price) AS total_price
        FROM
            order_history
    ) sub
    GROUP BY
        order_id
) o ON o.order_id = p.order_id
GROUP BY
    TO_CHAR(p.payment_date, 'yyyy-mm')

</select>


<select id="getPieChartData" resultType="map">
<![CDATA[
select i.item_id as item_id
		, i.item_name as item_name
		, merge.total_count as total_count
		, merge.total_sales as total_sales
		, merge.ranking 
from(
        select sub.*
            , rank() over (order by total_count desc) as ranking
        from (
	        select item_id
	        , sum(quantity) as total_count
	        , sum(price) as total_sales
	        from order_history h
	        join orders o on h.order_id = o.order_id
	        where to_char(order_date, 'yyyy') = '2023' and item_id != 'ITEM000001'
	        group by item_id
	        ) sub
	  ) merge
join item i
on i.item_id = merge.item_id; 
]]>
        
</select>


	
</mapper>