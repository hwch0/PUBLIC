<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kr.pub.dao.AdminDAO">
<select id="getLoggedInUserList" resultType="com.kr.pub.dto.UserDTO">
	select u.*, s.seat_no from users u
	inner join seat s on u.user_id = s.user_id
	where s.used ='Y'
</select>

<select id="getChartData" resultType="java.util.LinkedHashMap">
SELECT
    TO_CHAR(p.payment_date, 'yyyy-mm') AS payment_month,
    SUM(CASE WHEN p.payment_type_code = 'PT001' THEN o.total_price ELSE 0 END) AS PT001,
    SUM(CASE WHEN p.payment_type_code = 'PT002' THEN o.total_price ELSE 0 END) AS PT002,
    SUM(CASE
        WHEN p.payment_type_code = 'PT001' THEN o.total_price
        WHEN p.payment_type_code = 'PT002' THEN o.total_price
        ELSE 0
    END) AS total_sales
FROM
    payment p
JOIN (
    SELECT
        order_id,
        SUM(total_price) AS total_price
    FROM (
        SELECT
            item_id,
            order_id,
            (quantity * price) AS total_price
        FROM
            order_history
    ) sub
    GROUP BY
        order_id
) o ON o.order_id = p.order_id
GROUP BY
    TO_CHAR(p.payment_date, 'yyyy-mm')
ORDER BY payment_month

</select>


<select id="getPieChartData" resultType="java.util.LinkedHashMap">

select *
from 
(select i.item_id, i.item_name, merge.total_count, merge.total_sales, merge.ranking
from(
        select sub.*
            , rank() over (order by total_count desc) as ranking
        from (
        select item_id
        , sum(quantity) as total_count
        , sum(price) as total_sales
        from order_history h
        join orders o on h.order_id = o.order_id
        where item_id != 'ITEM000001'
			
		    <choose>
		        <when test="dateType == 'month'">
		            <![CDATA[
		            and to_char(order_date, 'yyyy-mm') = to_char(sysdate, 'yyyy-mm')
		            ]]>
		        </when>
		        <when test="dateType == 'day'">
		            <![CDATA[
		            and to_char(order_date, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd')
		            ]]>
		        </when>
		        <otherwise>
		            <![CDATA[
		            and to_char(order_date, 'yyyy') = to_char(sysdate, 'yyyy')
		            ]]>
		        </otherwise>
		    </choose>
			
        
<![CDATA[        
        group by item_id) sub) merge
join item i
on i.item_id = merge.item_id
order by merge.ranking)
where rownum <7
]]>
        
</select>

<select id="getUserCount" resultType="map">
SELECT
  SUM(CASE WHEN TO_CHAR(login_time, 'yyyy-mm-dd') = TO_CHAR(sysdate - 1, 'yyyy-mm-dd') THEN 1 ELSE 0 END) AS lastday,
  SUM(CASE WHEN TO_CHAR(login_time, 'yyyy-mm-dd') = TO_CHAR(sysdate, 'yyyy-mm-dd') THEN 1 ELSE 0 END) AS today
FROM user_history
</select>

<select id="getMonthlyUsers" resultType="java.util.LinkedHashMap">
select to_char(login_time, 'yyyy-mm') as month
, count(user_id) userCount
from user_history 
group by to_char(login_time, 'yyyy-mm')
order by month
</select>

<select id="getHourlyUsers" resultType="java.util.LinkedHashMap">


select to_char(sub.hours, 'HH24') as hour
, count(case when h.login_time is not null then 1 end) as user_count
from (
<![CDATA[
SELECT 
    to_date(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' ' || (LEVEL - 1), 'YYYY-MM-DD HH24') AS hours
  FROM 
    dual
  CONNECT BY LEVEL <= 24
) sub 
]]>
left outer join user_history h
<choose>
    <when test="dateType == 'month'">
        <![CDATA[
      ON to_char(sub.hours, 'yyyy-mm HH24')= to_char(h.login_time, 'yyyy-mm HH24')
      ]]>
  </when>
  <when test="dateType == 'day'">
      <![CDATA[
      ON to_char(sub.hours, 'yyyy-mm-dd HH24')= to_char(h.login_time, 'yyyy-mm-dd HH24')
      ]]>
  </when>
  <otherwise>
      <![CDATA[
      ON to_char(sub.hours, 'yyyy HH24')= to_char(h.login_time, 'yyyy HH24')
      ]]>
    </otherwise>
</choose>

group by sub.hours
order by hour


</select>

</mapper>