<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kr.pub.dao.ItemDAO">

	<!-- 입출고 내역 -->
	<select id="statusList" resultType="java.util.Map">
<![CDATA[
	        SELECT
	            ITEM_ID,
			    ITEM_NAME,
			    statusDate,
			    incDec,
			    stock,
			    price
	        FROM (
	            SELECT
	                i.ITEM_ID,
	                i.ITEM_NAME,	                
	                TO_CHAR(s.STORE_DATE, 'YYYY-MM-DD') AS statusDate,
	                ct.INC_DEC AS incDec,
	                sh.QUANTITY AS stock,
	                sh.PRICE AS price
	            FROM
	                ITEM i
	            JOIN
	                STORE_HISTORY sh ON i.ITEM_ID = sh.ITEM_ID
	            JOIN
	                STORE s ON sh.STORE_ID = s.STORE_ID
	            JOIN
	                CHANGE_TYPE ct ON s.CODE = ct.CODE
	            ORDER BY
	                s.STORE_DATE DESC
	        ) q1
	
	        UNION ALL
	
	        SELECT
	            *
	        FROM (
	            SELECT
	                i.ITEM_ID,
	                i.ITEM_NAME,
	                TO_CHAR(o.ORDER_DATE, 'YYYY-MM-DD') AS statusDate,
	                ct.TYPE AS incDec,
	                oh.QUANTITY AS stock,
	                oh.PRICE AS price
	            FROM
	                ITEM i
	            JOIN
	                order_history oh ON i.ITEM_ID = oh.ITEM_ID
	            JOIN
	                orders o ON oh.ORDER_ID = o.ORDER_ID
	            JOIN
	                change_type ct ON o.CODE = ct.CODE
	            ORDER BY
	                o.ORDER_DATE DESC
	        ) q2
	
	        ORDER BY
	            statusDate DESC
	    ]]>

	</select>

	<!-- 재고 관리 -->
	<select id="itemList" resultType="java.util.Map">
	  SELECT
	    i.ITEM_ID AS itemId,
	    i.ITEM_NAME AS itemName,
	    c.TYPE AS type,
	    TO_CHAR(s.STORE_DATE, 'YYYY-MM-DD') AS storeDate,
	    i.STOCK AS stock,
	    sh.PRICE AS price
	  FROM
	    item i
	  LEFT JOIN
	    store_history sh ON i.ITEM_ID = sh.ITEM_ID
	  LEFT JOIN
	    store s ON sh.STORE_ID = s.STORE_ID
	  LEFT JOIN
	    common_code c ON i.ITEM_TYPE_CODE = c.CODE
	  WHERE
	    1=1
	    <!-- startDate, endDate -->
	    <if test="startDate != null">
	       AND TO_CHAR(s.STORE_DATE, 'YYYY-MM-DD') BETWEEN TO_CHAR(#{startDate}, 'YYYY-MM-DD') AND TO_CHAR(#{endDate}, 'YYYY-MM-DD')
	    </if>
	    <!-- itemSelect -->
	    <if test="itemSelect != null">
	      AND c.TYPE = #{itemSelect}
	    </if>
	    <!-- itemName -->
	    <if test="itemName != null">
	      AND i.ITEM_NAME LIKE '%' || #{itemName} || '%'
	    </if>
	    <!-- stockStatus -->
		<if test="stockStatus == 1">
		    AND i.STOCK > 50
		</if>
		<if test="stockStatus == 2">
		    AND i.STOCK BETWEEN 1 AND 50
		</if>
		<if test="stockStatus == 3">
		    AND i.STOCK = 0
		</if>
	  GROUP BY
	     i.ITEM_ID, i.ITEM_NAME, i.ITEM_TYPE_CODE, c.TYPE, i.STOCK, sh.PRICE, s.STORE_DATE
		ORDER BY s.STORE_DATE DESC
	</select>
	
	<!-- 엑셀 쿼리 -->
	<!-- <select id="excelDownload"  parameterType="com.kr.pub.dto.ExcelDTO" resultType="com.kr.pub.dto.ExcelDTO">
	  SELECT
	    i.ITEM_ID AS itemId,
	    i.ITEM_NAME AS itemName,
	    c.TYPE AS type,
	    s.STORE_DATE AS storeDate,
	    i.STOCK AS stock,
	    sh.PRICE AS price
	  FROM
	    item i
	  LEFT JOIN
	    store_history sh ON i.ITEM_ID = sh.ITEM_ID
	  LEFT JOIN
	    store s ON sh.STORE_ID = s.STORE_ID
	  LEFT JOIN
	    common_code c ON i.ITEM_TYPE_CODE = c.CODE
	  GROUP BY
	     i.ITEM_ID, i.ITEM_NAME, i.ITEM_TYPE_CODE, c.TYPE, s.STORE_DATE, i.STOCK, sh.PRICE
	</select>
	-->
</mapper>